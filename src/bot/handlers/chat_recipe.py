import logging

from aiogram import Bot, Router
from aiogram.filters import Command
from aiogram.types import Message

from src.core.config import configure_logging
from src.core.database import MongoManager

router = Router()

configure_logging(logging.INFO)
logger = logging.getLogger(__name__)


@router.message(Command("my_recipes"))
async def my_recipes_info(message: Message, bot: Bot, mongo: MongoManager):
    recipe_collection = mongo.get_collection("recipes")
    user_id = message.from_user.id

    try:
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã, –≥–¥–µ user_id —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ user_id –¥–æ–∫—É–º–µ–Ω—Ç–∞
        cursor = recipe_collection.find(
            {"user_id": user_id},  # —Ñ–∏–ª—å—Ç—Ä
            {"_id": 0, "title": 1, "category": 1},  # –ø—Ä–æ–µ–∫—Ü–∏—è: —Ç–æ–ª—å–∫–æ title –∏ category
        )

        recipes = await cursor.to_list(length=100)  # –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π

        if not recipes:
            await bot.send_message(
                message.chat.id, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤."
            )
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–∫–æ–π
        msg_lines = ["–í–∞—à–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã:\n"]
        for recipe in recipes:
            title = recipe.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
            category = recipe.get("category", "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
            msg_lines.append(f"üçΩ {title}\nüìÇ {category}\n")

        await bot.send_message(message.chat.id, "\n".join(msg_lines))

    except Exception as e:
        await bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã: {e}")
